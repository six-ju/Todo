<link rel="stylesheet" href="/css/todolist.css" />

<div class="content">
  <div class="date-filter">
    <button class="filter-btn active" data-period="today">
      <i class="fa-solid fa-calendar-day"></i> TODAY
    </button>
    <button class="filter-btn" data-period="custom">
      <i class="fa-solid fa-calendar-week"></i> CUSTOM
    </button>
    <button class="filter-btn" data-period="following">
      <i class="fa-solid fa-user-plus"></i> FOLLOWING
    </button>
  </div>
  <div class="todo-list">
    <div class="title">
      <label class="icon-label prev">
        <i class="fa-solid fa-chevron-left prev-date"></i>
      </label>
      <p class="title-date">ToDo List</p>
      <input type="text" class="select-date" hidden />
      <p class="range" hidden>-</p>
      <p class="title-end-date" hidden>Select Date</p>
      <input type="text" class="select-end-date" hidden />
      <label class="icon-label next">
        <i class="fa-solid fa-chevron-right next-date"></i>
      </label>
    </div>

    <!-- toDo List  -->
    <div class="list-wrap"></div>
    <div class="text-area">
      <input type="text" class="input-todo" placeholder="ToDo" maxlength="20" />
      <label class="icon-click enter"
        ><i class="fa-solid fa-arrow-up-long"></i
      ></label>
    </div>
  </div>
</div>
<script>
  $(document).ready(function () {
    let callApi = false;
    let today = moment();
    let choseDate = today.format("YYYY-MM-DD");
    $(".title-date").text(choseDate);
    const loginUserId = $("#id").text();

    $(".title-date").click(function () {
      $(".select-date").trigger("click");
    });
    flatpickr(".select-date", {
      locale: "ko",
      position: "auto center",
      disableMobile: true,
      onChange: function (selectedDates, dateStr) {
        $(".title-date").text(dateStr);
        $(".title-end-date").text("Select Date");
        if ($(".filter-btn.active").data("period") === "today") {
          gettoDoList(loginUserId, dateStr);
        }
      },
    });

    $(".title-end-date").click(function () {
      $(".select-end-date").trigger("click");
    });
    flatpickr(".select-end-date", {
      locale: "ko",
      position: "auto center",
      disableMobile: true,
      onChange: function (selectedDates, dateStr) {
        const prevDate = $(".title-date").text();
        if (prevDate > dateStr) {
          generalAlert("날짜를 다시 입력해주세요.");
          return false;
        }
        $(".title-end-date").text(dateStr);
        dateStr = [prevDate, dateStr];
        gettoDoList(loginUserId, dateStr);
      },
    });

    gettoDoList(loginUserId, choseDate);

    $(".filter-btn").click(function () {
      const date = $(this).data("period");
      $(".filter-btn").removeClass("active");
      if (date === "today") {
        today = moment();
        choseDate = today.format("YYYY-MM-DD");
        $(".title-date").text(choseDate);
        $(".prev, .next").show();
        $(".range, .title-end-date").hide();
        $(this).addClass("active");
        gettoDoList(loginUserId, choseDate);
      } else if (date === "custom") {
        $(".prev, .next").hide();
        $(".range, .title-end-date").show();
        $(this).addClass("active");
      } else if (date === "following") {
        $(this).addClass("active");
        generalAlert("현재 개발중입니다.");
      }
    });

    // 전날로 이동
    $(".icon-label.prev").click(function () {
      today = today.subtract(1, "days");
      choseDate = today.format("YYYY-MM-DD");
      $(".title-date").text(choseDate);

      gettoDoList(loginUserId, choseDate);
    });

    // 다음날로이동
    $(".icon-label.next").click(function () {
      today = today.add(1, "days");
      choseDate = today.format("YYYY-MM-DD");
      $(".title-date").text(choseDate);

      gettoDoList(loginUserId, choseDate);
    });

    // toDo 리스트 저장
    $(".icon-click").click(function () {
      if ($(".list-wrap .no-list").length === 1) {
        $(".no-list").remove();
      }

      const temp = `temp-${moment(Date()).format("YYYY-MM-DDhh:mm:ss")}`;
      const date = $(".title-date").text();
      const text = $(".input-todo").val();
      const list = `<div class="todo-item">
                          <input type="checkbox" id=${temp} data-temp=${temp} class="todo-checkbox" />
                          <label for=${temp} class="todo-text">${text}</label>
                          <label class="todo-date">${date}</label>
                          <label class="delete-icon"><i class="fa-regular fa-trash-can"></i></label>
                      </div>`;

      $(".input-todo").val("");
      $(".list-wrap").append(list);

      const listData = {
        userId: loginUserId,
        content: text,
        startDate: date,
      };

      savetoDolist(listData);
    });

    // 삭제버튼 클릭시
    $(document).on("click", ".delete-icon", function () {
      const $todoItem = $(this).parent();
      const todoId = $todoItem.find(".todo-checkbox").prop("id");

      $todoItem.addClass("removing");
      $todoItem.on("animationend", function () {
        $todoItem.remove();
        const length = $(".list-wrap .todo-item").length;
        if (length === 0) {
          const list = `<div class="no-list">대문자 J답게 가보자고~~</div>`;
          $(".list-wrap").append(list);
        }
        deletedTodoList(todoId);
      });
    });

    // 일정 완료 체크시
    $(document).on("click", "input[type=checkbox]", function () {
      const id = $(this).attr("id");
      if (!callApi) {
        completetoDo(id);
      } else {
        generalAlert("잠시후에 다시 시도해주세요.");
      }
    });
  });

  function gettoDoList(loginUserId, choseDate) {
    $.ajax({
      url: `/api/todolist/${loginUserId}`,
      method: "GET",
      data: { choseDate },
      success: function (data) {
        $(".list-wrap div").remove();
        if (data.length > 0) {
          let list = ``;
          data.forEach((todo) => {
            let isChecked = todo.completeDate ? "checked" : "";
            list += `<div class="todo-item">
                          <input type="checkbox" id=${
                            todo.id
                          } class="todo-checkbox" ${isChecked}/>
                          <label for=${todo.id} class="todo-text">${
              todo.content
            }</label>
                          <label class="todo-date">${moment(
                            todo.startDate
                          ).format("YYYY-MM-DD")}</label>
                          <label class="delete-icon"><i class="fa-regular fa-trash-can"></i></label>
                      </div>`;
          });

          $(".list-wrap").append(list);
        } else {
          const list = `<div class="no-list">대문자 J답게 가보자고~~</div>`;
          $(".list-wrap").append(list);
        }
      },
      error: function (error) {
        generalAlert("리스트 가져오는중 오류가 발생했습니다.");
      },
    });
  }

  function savetoDolist(listData) {
    $.ajax({
      url: "/api/todolist",
      method: "POST",
      data: { listData },
      success: function (data) {
        const id = data;
        const $lastTodoItem = $(".list-wrap .todo-item").last();
        const $checkbox = $lastTodoItem.find(".todo-checkbox");
        const $label = $lastTodoItem.find(".todo-text");

        // ID 변경
        $checkbox.prop("id", `${id}`);
        $label.attr("for", `${id}`);

        // data-temp 속성 제거
        $checkbox.removeAttr("data-temp");
      },
      error: function (error) {
        $(".list-wrap .todo-item").last().remove();
        generalAlert("등록 중 오류가 발생했습니다.");
      },
    });
  }

  function deletedTodoList(todoId) {
    $.ajax({
      url: `/api/todolist/${todoId}`,
      method: "DELETE",
      success: function (data) {},
      error: function (error) {
        generalAlert("to Do List 삭제중 오류가 발생했습니다.");
      },
    });
  }

  function completetoDo(id) {
    callApi = true;
    $.ajax({
      url: `/api/todolist/${id}`,
      method: "PATCH",
      success: function () {
        callApi = false;
      },
      error: function (error) {
        generalAlert("to Do List 수정 중 오류가 발생했습니다.");
      },
    });
  }
</script>
